{"version":3,"sources":["stencil-ion-split-pane-md-entry-js-es5.js","webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane-md.entry.js"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"stencil-ion-split-pane-md-entry-js\"],{\n\n/***/ \"./node_modules/@ionic/core/dist/esm/ion-split-pane-md.entry.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/@ionic/core/dist/esm/ion-split-pane-md.entry.js ***!\n  \\**********************************************************************/\n/*! exports provided: ion_split_pane */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_split_pane\", function() { return SplitPane; });\n/* harmony import */ var _index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-2cd7e630.js */ \"./node_modules/@ionic/core/dist/esm/index-2cd7e630.js\");\n/* harmony import */ var _ionic_global_a175fa73_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ionic-global-a175fa73.js */ \"./node_modules/@ionic/core/dist/esm/ionic-global-a175fa73.js\");\n\r\n\r\n\r\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\r\n\r\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\r\n\r\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n    'xs': '(min-width: 0px)',\r\n    'sm': '(min-width: 576px)',\r\n    'md': '(min-width: 768px)',\r\n    'lg': '(min-width: 992px)',\r\n    'xl': '(min-width: 1200px)',\r\n    'never': ''\r\n};\r\nconst SplitPane = class {\r\n    constructor(hostRef) {\r\n        Object(_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the split pane will be hidden.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * When the split-pane should be shown.\r\n         * Can be a CSS media query expression, or a shortcut expression.\r\n         * Can also be a boolean expression.\r\n         */\r\n        this.when = QUERY['lg'];\r\n        this.ionSplitPaneVisible = Object(_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionSplitPaneVisible\", 7);\r\n    }\r\n    visibleChanged(visible) {\r\n        const detail = { visible, isPane: this.isPane.bind(this) };\r\n        this.ionSplitPaneVisible.emit(detail);\r\n    }\r\n    connectedCallback() {\r\n        this.styleChildren();\r\n        this.updateState();\r\n    }\r\n    disconnectedCallback() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n    }\r\n    updateState() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n        // Check if the split-pane is disabled\r\n        if (this.disabled) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        // When query is a boolean\r\n        const query = this.when;\r\n        if (typeof query === 'boolean') {\r\n            this.visible = query;\r\n            return;\r\n        }\r\n        // When query is a string, let's find first if it is a shortcut\r\n        const mediaQuery = QUERY[query] || query;\r\n        // Media query is empty or null, we hide it\r\n        if (mediaQuery.length === 0) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        if (window.matchMedia) {\r\n            // Listen on media query\r\n            const callback = (q) => {\r\n                this.visible = q.matches;\r\n            };\r\n            const mediaList = window.matchMedia(mediaQuery);\r\n            mediaList.addListener(callback);\r\n            this.rmL = () => mediaList.removeListener(callback);\r\n            this.visible = mediaList.matches;\r\n        }\r\n    }\r\n    isPane(element) {\r\n        if (!this.visible) {\r\n            return false;\r\n        }\r\n        return element.parentElement === this.el\r\n            && element.classList.contains(SPLIT_PANE_SIDE);\r\n    }\r\n    styleChildren() {\r\n        const contentId = this.contentId;\r\n        const children = this.el.children;\r\n        const nu = this.el.childElementCount;\r\n        let foundMain = false;\r\n        for (let i = 0; i < nu; i++) {\r\n            const child = children[i];\r\n            const isMain = contentId !== undefined && child.id === contentId;\r\n            if (isMain) {\r\n                if (foundMain) {\r\n                    console.warn('split pane cannot have more than one main node');\r\n                    return;\r\n                }\r\n                foundMain = true;\r\n            }\r\n            setPaneClass(child, isMain);\r\n        }\r\n        if (!foundMain) {\r\n            console.warn('split pane does not have a specified main node');\r\n        }\r\n    }\r\n    render() {\r\n        const mode = Object(_ionic_global_a175fa73_js__WEBPACK_IMPORTED_MODULE_1__[\"b\"])(this);\r\n        return (Object(_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { class: {\r\n                [mode]: true,\r\n                // Used internally for styling\r\n                [`split-pane-${mode}`]: true,\r\n                'split-pane-visible': this.visible\r\n            } }, Object(_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"slot\", null)));\r\n    }\r\n    get el() { return Object(_index_2cd7e630_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\r\n    static get watchers() { return {\r\n        \"visible\": [\"visibleChanged\"],\r\n        \"disabled\": [\"updateState\"],\r\n        \"when\": [\"updateState\"]\r\n    }; }\r\n};\r\nconst setPaneClass = (el, isMain) => {\r\n    let toAdd;\r\n    let toRemove;\r\n    if (isMain) {\r\n        toAdd = SPLIT_PANE_MAIN;\r\n        toRemove = SPLIT_PANE_SIDE;\r\n    }\r\n    else {\r\n        toAdd = SPLIT_PANE_SIDE;\r\n        toRemove = SPLIT_PANE_MAIN;\r\n    }\r\n    const classList = el.classList;\r\n    classList.add(toAdd);\r\n    classList.remove(toRemove);\r\n};\r\nSplitPane.style = {\r\n    /*STENCIL:MODE:ios*/ ios: splitPaneIosCss,\r\n    /*STENCIL:MODE:md*/ md: splitPaneMdCss\r\n};\r\n\r\n\r\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=stencil-ion-split-pane-md-entry-js-es2015.js.map","import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\r\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\r\n\r\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\r\n\r\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\r\n\r\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n    'xs': '(min-width: 0px)',\r\n    'sm': '(min-width: 576px)',\r\n    'md': '(min-width: 768px)',\r\n    'lg': '(min-width: 992px)',\r\n    'xl': '(min-width: 1200px)',\r\n    'never': ''\r\n};\r\nconst SplitPane = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the split pane will be hidden.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * When the split-pane should be shown.\r\n         * Can be a CSS media query expression, or a shortcut expression.\r\n         * Can also be a boolean expression.\r\n         */\r\n        this.when = QUERY['lg'];\r\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n    }\r\n    visibleChanged(visible) {\r\n        const detail = { visible, isPane: this.isPane.bind(this) };\r\n        this.ionSplitPaneVisible.emit(detail);\r\n    }\r\n    connectedCallback() {\r\n        this.styleChildren();\r\n        this.updateState();\r\n    }\r\n    disconnectedCallback() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n    }\r\n    updateState() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n        // Check if the split-pane is disabled\r\n        if (this.disabled) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        // When query is a boolean\r\n        const query = this.when;\r\n        if (typeof query === 'boolean') {\r\n            this.visible = query;\r\n            return;\r\n        }\r\n        // When query is a string, let's find first if it is a shortcut\r\n        const mediaQuery = QUERY[query] || query;\r\n        // Media query is empty or null, we hide it\r\n        if (mediaQuery.length === 0) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        if (window.matchMedia) {\r\n            // Listen on media query\r\n            const callback = (q) => {\r\n                this.visible = q.matches;\r\n            };\r\n            const mediaList = window.matchMedia(mediaQuery);\r\n            mediaList.addListener(callback);\r\n            this.rmL = () => mediaList.removeListener(callback);\r\n            this.visible = mediaList.matches;\r\n        }\r\n    }\r\n    isPane(element) {\r\n        if (!this.visible) {\r\n            return false;\r\n        }\r\n        return element.parentElement === this.el\r\n            && element.classList.contains(SPLIT_PANE_SIDE);\r\n    }\r\n    styleChildren() {\r\n        const contentId = this.contentId;\r\n        const children = this.el.children;\r\n        const nu = this.el.childElementCount;\r\n        let foundMain = false;\r\n        for (let i = 0; i < nu; i++) {\r\n            const child = children[i];\r\n            const isMain = contentId !== undefined && child.id === contentId;\r\n            if (isMain) {\r\n                if (foundMain) {\r\n                    console.warn('split pane cannot have more than one main node');\r\n                    return;\r\n                }\r\n                foundMain = true;\r\n            }\r\n            setPaneClass(child, isMain);\r\n        }\r\n        if (!foundMain) {\r\n            console.warn('split pane does not have a specified main node');\r\n        }\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { class: {\r\n                [mode]: true,\r\n                // Used internally for styling\r\n                [`split-pane-${mode}`]: true,\r\n                'split-pane-visible': this.visible\r\n            } }, h(\"slot\", null)));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"visible\": [\"visibleChanged\"],\r\n        \"disabled\": [\"updateState\"],\r\n        \"when\": [\"updateState\"]\r\n    }; }\r\n};\r\nconst setPaneClass = (el, isMain) => {\r\n    let toAdd;\r\n    let toRemove;\r\n    if (isMain) {\r\n        toAdd = SPLIT_PANE_MAIN;\r\n        toRemove = SPLIT_PANE_SIDE;\r\n    }\r\n    else {\r\n        toAdd = SPLIT_PANE_SIDE;\r\n        toRemove = SPLIT_PANE_MAIN;\r\n    }\r\n    const classList = el.classList;\r\n    classList.add(toAdd);\r\n    classList.remove(toRemove);\r\n};\r\nSplitPane.style = {\r\n    /*STENCIL:MODE:ios*/ ios: splitPaneIosCss,\r\n    /*STENCIL:MODE:md*/ md: splitPaneMdCss\r\n};\r\n\r\nexport { SplitPane as ion_split_pane };\r\n"]}