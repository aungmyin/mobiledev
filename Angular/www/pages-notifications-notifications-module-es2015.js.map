{"version":3,"sources":["./src/app/pages/notifications/notifications.page.html","./src/app/pages/notifications/notifications-routing.module.ts","./src/app/pages/notifications/notifications.module.ts","./src/app/pages/notifications/notifications.page.scss","./src/app/pages/notifications/notifications.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,2vC;;;;;;;;;;;;;;;;;;;ACA0B;AACc;AAEE;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAMF,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACF;AAEA;AAEmC;AAEvB;AACe;AAYxE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAVnC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4FAA8B;YAC9B,qFAAgB;SACjB;QACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;ACrBpC;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;;;ACAX;AAEU;AACA;AACE;AAO9D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAQ5B,YACU,IAAiB,EACjB,WAAwB,EACxB,YAA0B;QAF1B,SAAI,GAAJ,IAAI,CAAa;QACjB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QARpC,aAAQ,GAAG;YACT,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;SACV,CAAC;IAME,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAE,CAAC,GAAQ,EAAE,EAAE;YAC1C,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAE3C,8BAA8B;QAC9B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YAC/C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChD,CAAC,GAAQ,EAAE,EAAE;gBACX,4BAA4B;gBAC5B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAChD,CAAC,EACD,CAAC,KAAU,EAAE,EAAE;gBACb,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;YACnD,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SAC/C;IACH,CAAC;CAEF;;YAhCiB,yEAAW;YACJ,yEAAW;YACV,2EAAY;;AAXzB,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,uOAAwC;;KAEzC,CAAC;2EAUgB,yEAAW;QACJ,yEAAW;QACV,2EAAY;GAXzB,iBAAiB,CAyC7B;AAzC6B","file":"pages-notifications-notifications-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Notifications</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n<ion-list>\\r\\n  <ion-item>\\r\\n    <ion-avatar slot=\\\"start\\\">\\r\\n      <img src=\\\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\\\">\\r\\n    </ion-avatar>\\r\\n    <ion-label>Item Avatar</ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-avatar slot=\\\"start\\\">\\r\\n      <img src=\\\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\\\">\\r\\n    </ion-avatar>\\r\\n    <ion-label>Item Avatar</ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>Input</ion-label>\\r\\n    <ion-input></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>Toggle</ion-label>\\r\\n    <ion-toggle slot=\\\"end\\\"></ion-toggle>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>Radio</ion-label>\\r\\n    <ion-radio slot=\\\"end\\\"></ion-radio>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>Checkbox</ion-label>\\r\\n    <ion-checkbox slot=\\\"start\\\"></ion-checkbox>\\r\\n  </ion-item>\\r\\n</ion-list>\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotificationsPage } from './notifications.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\r\n\r\nimport { NotificationsPage } from './notifications.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NotificationsPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [NotificationsPage]\r\n})\r\nexport class NotificationsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FeedService } from 'src/app/services/feed.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.page.html',\r\n  styleUrls: ['./notifications.page.scss'],\r\n})\r\nexport class NotificationsPage implements OnInit {\r\n  public authUser: any;\r\n\r\n  postData = {\r\n    user_id: '',\r\n    token: ''\r\n  };\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private feedService: FeedService,\r\n    private toastService: ToastService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.auth.userData$.subscribe( (res: any) => {\r\n      this.authUser = res;\r\n      this.getFeedData();\r\n    })\r\n  }\r\n\r\n  getFeedData() {\r\n    this.postData.user_id = this.authUser.user_id;\r\n    this.postData.token = this.authUser.token;\r\n    \r\n   // console.log(this.postData);\r\n   if (this.postData.user_id && this.postData.token) {\r\n      this.feedService.feedData(this.postData).subscribe(\r\n        (res: any) => {\r\n          //console.log(res.feedData);\r\n          this.feedService.changeFeedData(res.feedData);\r\n        },\r\n        (error: any) => {\r\n          this.toastService.presentToast('Network Issue.');\r\n        }\r\n      );\r\n    } else {\r\n      this.toastService.presentToast(\"loading ...\");\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}